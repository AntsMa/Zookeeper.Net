{"name":"Zookeeper.net","tagline":"zookeeper c# 异步客户端","body":"﻿# Overview\r\nA c# async client for Apache Zookeeper.\r\nRequirements\r\n============\r\n.Net 4.0+\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n# Example\r\n```csharp\r\nvar client = Sodao.Zookeeper.ZookClientPool.Get(\"zk1\");\r\n\r\n//create a node\r\nclient.Create(\"/test1\", null, IDs.OPEN_ACL_UNSAFE, CreateModes.Ephemeral).ContinueWith(c =>\r\n{\r\n    if (c.IsFaulted) Console.Write(string.Concat(\"error: \", c.Exception.ToString()));\r\n    else Console.WriteLine(c.Result);\r\n});\r\n//get child nodes\r\nclient.GetChildren(\"/\", false).ContinueWith(c =>\r\n{\r\n    if (c.IsFaulted) Console.Write(string.Concat(\"error: \", c.Exception.ToString()));\r\n    else\r\n    {\r\n        foreach (var nodeName in c.Result)\r\n            Console.WriteLine(nodeName);\r\n    }\r\n});\r\n\r\n//remove /test1 node\r\nSodao.FastSocket.SocketBase.Utils.TaskEx.Delay(3000, () =>\r\n{\r\n    client.Delete(\"/test1\").ContinueWith(c =>\r\n    {\r\n        if (c.IsFaulted) Console.Write(string.Concat(\"error: \", c.Exception.ToString()));\r\n        else Console.WriteLine(\"/test1 was deleted\");\r\n    });\r\n});\r\n\r\n//session node\r\nvar sessionNode = new SessionNode(client, \"/sessionNode1\", null, IDs.OPEN_ACL_UNSAFE);\r\nConsole.ReadLine();\r\nsessionNode.Close();\r\nConsole.WriteLine(\"session node closed\");\r\n```\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<configuration>\r\n\r\n  <configSections>\r\n    <section name=\"zookeeper\"\r\n             type=\"Sodao.Zookeeper.Config.ZookeeperConfig, Zookeeper\"/>\r\n  </configSections>\r\n\r\n  <zookeeper>\r\n    <clients>\r\n      <client name=\"zk1\"\r\n              chroot=\"\"\r\n              sessionTimeout=\"5000\"\r\n              connectionString=\"127.0.0.1:2181\" />\r\n    </clients>\r\n  </zookeeper>\r\n\r\n</configuration>\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}